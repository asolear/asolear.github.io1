{"version":3,"file":"static/js/31534.c00a6e9a.chunk.js","mappings":"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","sources":["Informes/formulario/zExcelUploaderStoragePrecargaxDefecto.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Box,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Link,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as XLSX from \"xlsx\";\n\nconst ExcelUploaderStorage = ({ open, handleClose }) => {\n    const [sheets, setSheets] = useState(null); // Datos finales confirmados\n    const [tempSheets, setTempSheets] = useState(null); // Datos cargados temporalmente\n    const [dragOver, setDragOver] = useState(false);\n    const [expanded, setExpanded] = useState({}); // Estado para controlar expansión de hojas\n\n    useEffect(() => {\n        const storedData = sessionStorage.getItem(\"excelData\");\n        if (storedData) {\n            setSheets(JSON.parse(storedData));\n        }\n    }, []);\n\n    const handleFileUpload = (file) => {\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: \"array\" });\n            const sheetsData = {};\n\n            workbook.SheetNames.forEach((sheetName) => {\n                const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                    header: 1,\n                });\n\n                const filteredSheet = sheet.filter((row) =>\n                    row.some((cell) => cell !== null && cell !== undefined && cell !== \"\")\n                );\n\n                sheetsData[sheetName] = filteredSheet;\n            });\n\n            setTempSheets(sheetsData);\n        };\n\n        reader.readAsArrayBuffer(file);\n    };\n\n    const handleInputChange = (event) => {\n        const file = event.target.files[0];\n        handleFileUpload(file);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        setDragOver(true);\n    };\n\n    const handleDragLeave = () => {\n        setDragOver(false);\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        setDragOver(false);\n        const file = event.dataTransfer.files[0];\n        handleFileUpload(file);\n    };\n\n    const navigate = useNavigate();\n\n    const handleConfirm = () => {\n        if (tempSheets) {\n            setSheets(tempSheets);\n            sessionStorage.setItem(\"excelData\", JSON.stringify(tempSheets));\n        }\n        setTempSheets(null);\n        handleClose();\n        navigate(0);\n    };\n\n    const handleCancel = () => {\n        setTempSheets(null);\n        handleClose();\n    };\n\n    const toggleExpand = (sheetName) => {\n        setExpanded((prev) => ({\n            ...prev,\n            [sheetName]: !prev[sheetName],\n        }));\n    };\n\n    return (\n        <Box sx={{ p: 2 }}>\n            {/* <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\"> */}\n            <Dialog open={open} onClose={handleClose} fullWidth fullScreen>\n\n                <DialogTitle>Subir archivo Excel de parámetros</DialogTitle>\n                <DialogContent>\n                    <Box\n                        sx={{\n                            mt: 2,\n                            p: 2,\n                            border: \"2px dashed\",\n                            borderColor: dragOver ? \"primary.main\" : \"grey.400\",\n                            borderRadius: 2,\n                            textAlign: \"center\",\n                            backgroundColor: dragOver ? \"grey.100\" : \"transparent\",\n                        }}\n                        onDragOver={handleDragOver}\n                        onDragLeave={handleDragLeave}\n                        onDrop={handleDrop}\n                    >\n                        <Typography variant=\"body1\" gutterBottom>\n                            Arrastra y suelta tu archivo aquí o selecciona uno manualmente\n                        </Typography>\n                        <Button variant=\"contained\" component=\"label\">\n                            Seleccionar Archivo\n                            <input\n                                type=\"file\"\n                                hidden\n                                accept=\".xlsx, .xls\"\n                                onChange={handleInputChange}\n                            />\n                        </Button>\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"body2\">\n                            ¿Necesitas una plantilla? Descárgala haciendo clic\n                            <Link href=\"/plantillasParametros/caes.xlsx\" download sx={{ ml: 1 }}>\n                                aquí\n                            </Link>\n                            .\n                        </Typography>\n                    </Box>\n                    {tempSheets && (\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Hojas procesadas:</Typography>\n                            {Object.keys(tempSheets).map((sheetName) => (\n                                <Box key={sheetName} sx={{ mt: 1 }}>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"space-between\",\n                                        }}\n                                    >\n                                        <Typography variant=\"body1\">{sheetName}</Typography>\n                                        <IconButton onClick={() => toggleExpand(sheetName)}>\n                                            {expanded[sheetName] ? (\n                                                <ExpandLessIcon />\n                                            ) : (\n                                                <ExpandMoreIcon />\n                                            )}\n                                        </IconButton>\n                                    </Box>\n                                    <Collapse in={expanded[sheetName]} timeout=\"auto\" unmountOnExit>\n                                        <TableContainer component={Paper} sx={{ mt: 1 }}>\n                                            <Table size=\"small\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        {tempSheets[sheetName][0]?.map((cell, index) => (\n                                                            <TableCell key={index}>{cell}</TableCell>\n                                                        ))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {tempSheets[sheetName].slice(1).map((row, rowIndex) => (\n                                                        <TableRow key={rowIndex}>\n                                                            {row.map((cell, cellIndex) => (\n                                                                <TableCell key={cellIndex}>{cell}</TableCell>\n                                                            ))}\n                                                        </TableRow>\n                                                    ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Collapse>\n                                </Box>\n                            ))}\n                        </Box>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} color=\"secondary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\">\n                        Confirmar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default ExcelUploaderStorage;\n\n\n\n"],"names":["_ref","open","handleClose","sheets","setSheets","useState","tempSheets","setTempSheets","dragOver","setDragOver","expanded","setExpanded","useEffect","storedData","sessionStorage","getItem","JSON","parse","handleFileUpload","file","reader","FileReader","onload","e","data","Uint8Array","target","result","workbook","XLSX","type","sheetsData","SheetNames","forEach","sheetName","filteredSheet","sheet_to_json","Sheets","header","filter","row","some","cell","undefined","readAsArrayBuffer","navigate","useNavigate","_jsx","Box","sx","p","children","_jsxs","Dialog","onClose","fullWidth","fullScreen","DialogTitle","DialogContent","mt","border","borderColor","borderRadius","textAlign","backgroundColor","onDragOver","event","preventDefault","onDragLeave","handleDragLeave","onDrop","dataTransfer","files","Typography","variant","gutterBottom","Button","component","hidden","accept","onChange","Link","href","download","ml","Object","keys","map","_tempSheets$sheetName","display","alignItems","justifyContent","IconButton","onClick","prev","_objectSpread","toggleExpand","ExpandLessIcon","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","TableContainer","Paper","Table","size","TableHead","TableRow","index","TableCell","TableBody","slice","rowIndex","cellIndex","DialogActions","handleCancel","color","handleConfirm","setItem","stringify"],"sourceRoot":""}