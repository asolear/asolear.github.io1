{"version":3,"file":"static/js/19513.a48adb3c.chunk.js","mappings":"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","sources":["Informes/api/AALLamadaAPI.jsx","components/zExcelUploaderStorage.jsx","../node_modules/@mui/icons-material/esm/Tune.js","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, Typography, CircularProgress, IconButton } from '@mui/material';\nimport axios from 'axios';\nimport ExcelUploaderStorage from \"../../components/zExcelUploaderStorage\";\nimport TuneIcon from \"@mui/icons-material/Tune\";\n\nconst ApiCallComponent = () => {\n    const [dataFromApi, setDataFromApi] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [open, setOpen] = useState(false);\n    const [file, setFile] = useState(null);\n    // Abrir y cerrar modal\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => {\n        setOpen(false);\n        setFile(null);\n        setError(null);\n        window.location.reload();\n    };\n    useEffect(() => {\n        const fetchData = async () => {\n            setLoading(true);\n            setError(null);\n\n            // Obtén los datos del sessionStorage\n            const sessionData = sessionStorage.getItem(\"excelData\");\n\n            // Si no hay datos en sessionStorage, usamos un valor de ejemplo\n            const dataToSend = sessionData ? JSON.parse(sessionData) : { example: \"data\" };\n\n            try {\n                // Realizamos la llamada a la API con axios\n                // const response = await axios.post('https://caeserver.duckdns.org/numero', dataToSend);\n                const response = await axios.post('http://127.0.0.1:8000/numero', dataToSend);\n\n                // Verifica que la respuesta no esté vacía\n                if (response.data) {\n                    setDataFromApi(response.data); // Guarda el JSON recibido\n                }\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    return (\n        <div>\n            <Typography variant=\"h6\">Llamada a la API</Typography>\n\n            {loading && <CircularProgress />}\n\n            {error && <Typography color=\"error\">Error: {error}</Typography>}\n\n            {dataFromApi && (\n                <div>\n                    <Typography variant=\"body1\">Respuesta de la API:</Typography>\n                    <pre>{JSON.stringify(dataFromApi, null, 2)}</pre>\n                </div>\n            )}\n\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => window.location.reload()}>\n                Refrescar\n            </Button>\n            <IconButton\n                onClick={handleOpen}\n                color=\"success\"\n                style={{\n                    position: 'fixed',\n                    top: '50%',\n                    right: '20px',\n                    backgroundColor: 'white',\n                    boxShadow: '0px 4px 6px rgba(0,0,0,0.1)',\n                    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                }}\n            >\n                <TuneIcon />\n            </IconButton>\n\n            <ExcelUploaderStorage open={open} handleClose={handleClose} />\n        </div>\n    );\n};\n\nexport default ApiCallComponent;\n","import React, { useState } from \"react\";\nimport {\n    Button,\n    Box,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Link,\n    IconButton,\n} from \"@mui/material\";\nimport * as XLSX from \"xlsx\";\nimport TuneIcon from '@mui/icons-material/Tune';\n\nconst ExcelUploaderStorage = ({ open, handleOpen, handleClose }) => {\n    const [sheets, setSheets] = useState(null);\n    const [dragOver, setDragOver] = useState(false);\n\n    const handleFileUpload = (file) => {\n        if (!file) return;\n\n        // Limpia la clave 'excelData' de sessionStorage\n        sessionStorage.removeItem(\"excelData\");\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: \"array\" });\n            const sheetsData = {};\n\n            // Procesar cada hoja y convertirla en JSON\n            workbook.SheetNames.forEach((sheetName) => {\n                const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                    header: 1, // Mantiene la primera fila como encabezados\n                });\n\n                // Filtrar filas vacías\n                const filteredSheet = sheet.filter((row) =>\n                    row.some((cell) => cell !== null && cell !== undefined && cell !== \"\")\n                );\n\n                sheetsData[sheetName] = filteredSheet;\n            });\n\n            // Guardar los datos procesados en el estado y en sessionStorage\n            setSheets(sheetsData);\n            sessionStorage.setItem(\"excelData\", JSON.stringify(sheetsData));\n        };\n\n        reader.readAsArrayBuffer(file);\n    };\n\n    const handleInputChange = (event) => {\n        const file = event.target.files[0];\n        handleFileUpload(file);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        setDragOver(true);\n    };\n\n    const handleDragLeave = () => {\n        setDragOver(false);\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        setDragOver(false);\n        const file = event.dataTransfer.files[0];\n        handleFileUpload(file);\n    };\n\n    return (\n        <Box sx={{ p: 2 }}>\n\n\n            <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\">\n                <DialogTitle>Subir archivo Excel de parámetros</DialogTitle>\n                <DialogContent>\n                    <Box\n                        sx={{\n                            mt: 2,\n                            p: 2,\n                            border: \"2px dashed\",\n                            borderColor: dragOver ? \"primary.main\" : \"grey.400\",\n                            borderRadius: 2,\n                            textAlign: \"center\",\n                            backgroundColor: dragOver ? \"grey.100\" : \"transparent\",\n                        }}\n                        onDragOver={handleDragOver}\n                        onDragLeave={handleDragLeave}\n                        onDrop={handleDrop}\n                    >\n                        <Typography variant=\"body1\" gutterBottom>\n                            Arrastra y suelta tu archivo aquí o selecciona uno manualmente\n                        </Typography>\n                        <Button variant=\"contained\" component=\"label\">\n                            Seleccionar Archivo\n                            <input\n                                type=\"file\"\n                                hidden\n                                accept=\".xlsx, .xls\"\n                                onChange={handleInputChange}\n                            />\n                        </Button>\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"body2\">\n                            ¿Necesitas una plantilla? Descárgala haciendo clic\n                            <Link href=\"/plantillasParametros/caes.xlsx\" download sx={{ ml: 1 }}>\n                                aquí\n                            </Link>\n                            .\n                        </Typography>\n                    </Box>\n                    {sheets && (\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Hojas procesadas:</Typography>\n                            <ul>\n                                {Object.keys(sheets).map((sheetName) => (\n                                    <li key={sheetName}>{sheetName}</li>\n                                ))}\n                            </ul>\n                        </Box>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cerrar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default ExcelUploaderStorage;\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17v2h6v-2zM3 5v2h10V5zm10 16v-2h8v-2h-8v-2h-2v6zM7 9v2H3v2h4v2h2V9zm14 4v-2H11v2zm-6-4h2V7h4V5h-4V3h-2z\"\n}), 'Tune');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["ApiCallComponent","dataFromApi","setDataFromApi","useState","loading","setLoading","error","setError","open","setOpen","file","setFile","useEffect","async","sessionData","sessionStorage","getItem","dataToSend","JSON","parse","example","response","axios","post","data","message","fetchData","_jsxs","children","_jsx","Typography","variant","CircularProgress","color","stringify","Button","onClick","window","location","reload","IconButton","handleOpen","style","position","top","right","backgroundColor","boxShadow","TuneIcon","ExcelUploaderStorage","handleClose","_ref","sheets","setSheets","dragOver","setDragOver","handleFileUpload","removeItem","reader","FileReader","onload","e","Uint8Array","target","result","workbook","XLSX","type","sheetsData","SheetNames","forEach","sheetName","filteredSheet","sheet_to_json","Sheets","header","filter","row","some","cell","undefined","setItem","readAsArrayBuffer","Box","sx","p","Dialog","onClose","fullWidth","maxWidth","DialogTitle","DialogContent","mt","border","borderColor","borderRadius","textAlign","onDragOver","event","preventDefault","onDragLeave","handleDragLeave","onDrop","dataTransfer","files","gutterBottom","component","hidden","accept","onChange","Link","href","download","ml","Object","keys","map","DialogActions","createSvgIcon","d","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_templateObject","_templateObject2","_templateObject3","_templateObject4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","rotateAnimation","css","dashAnimation","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","concat","capitalize","memoTheme","theme","display","variants","transition","transitions","create","animation","entries","palette","createSimplePaletteValueFilter","_ref2","vars","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useDefaultProps","className","size","thickness","value","other","_objectWithoutProperties","_objectSpread","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","transform","clsx","width","height","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}