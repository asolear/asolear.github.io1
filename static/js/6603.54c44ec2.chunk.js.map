{"version":3,"file":"static/js/6603.54c44ec2.chunk.js","mappings":"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","sources":["Informes/formulario/C4pdfRellenoValoresdeSessionStorageCamposdeAPI.jsx","Informes/formulario/zExcelUploaderStoragePrecargaxDefecto.jsx","components/configURL.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import pdfUrl from './AGR010  Pantallas térmicas en invernaderos.pdf';\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../../components/firebase/firebaseConfig\";\nimport {\n  IconButton,\n  Typography,\n  CircularProgress,\n} from \"@mui/material\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport { Tune as TuneIcon, Download as DownloadIcon } from \"@mui/icons-material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ExcelUploaderStorage from \"./zExcelUploaderStoragePrecargaxDefecto\";\n\nimport config from '../../components/configURL';\n// Configuración de pdf.worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `/workers/3.11.174/pdf.worker.min.js`;\nconst ENDPOINT = \"numero\"\nconst PDF_API_URL = `${config.API_URL}/${ENDPOINT}?timestamp=${new Date().getTime()}`;\n\nconst PDFRenderer = () => {\n  const [user] = useAuthState(auth);\n  const navigate = useNavigate();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [dataFromApi, setDataFromApi] = useState(null); // State to store API data\n\n  // Fetch data from sessionStorage or API\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setError(null);\n\n      // Get data from sessionStorage\n      const sessionData = sessionStorage.getItem(\"excelData\");\n\n      // Use example data if no session data is found\n      const dataToSend = sessionData ? JSON.parse(sessionData) : { example: \"data\" };\n\n      try {\n        // Fetch data from the API\n        const response = await axios.post(PDF_API_URL, dataToSend);\n\n        // Ensure API response is valid\n        if (response.data) {\n          setDataFromApi(response.data); // Save the API response\n        }\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []); // Empty dependency array ensures this only runs on component mount\n\n  // Fetch the PDF and fill in the form\n  const fetchPdf = async (pdfUrl) => {\n    try {\n      return await fetch(pdfUrl).then((res) => res.arrayBuffer());\n    } catch (err) {\n      console.error(\"Error fetching PDF:\", err);\n      throw new Error(\"Failed to fetch PDF.\");\n    }\n  };\n\n  // Fill the form fields in the PDF with dynamic data from API\n  const fillPdfFields = async (pdfBytes) => {\n    try {\n      const pdfDoc = await PDFDocument.load(pdfBytes);\n      const form = pdfDoc.getForm();\n\n      // Only fill the PDF if the data is available\n      if (dataFromApi && dataFromApi[\"Sheet1\"]) {\n        const sheetData = dataFromApi[\"Sheet1\"];\n\n        // Map API data to PDF fields (using Sheet1 array)\n        sheetData.forEach(([fieldName, value]) => {\n          try {\n            const field = form.getField(fieldName);\n            if (field) {\n              field.setText(String(value)); // Set field text with API value\n            }\n          } catch (err) {\n            console.warn(`Field '${fieldName}' not found in PDF:`, err.message);\n          }\n        });\n      }\n\n      return await pdfDoc.save();\n    } catch (err) {\n      console.error(\"Error filling PDF fields:\", err);\n      throw new Error(\"Failed to fill PDF fields.\");\n    }\n  };\n\n  // Render PDF as images\n  const renderPdfAsImages = async (pdfBytes) => {\n    try {\n      const pdf = await pdfjsLib.getDocument({ data: pdfBytes }).promise;\n      const pages = [];\n\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 2.5 });\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        await page.render({ canvasContext: context, viewport }).promise;\n        pages.push(canvas.toDataURL(\"image/png\"));\n      }\n\n      setImages(pages);\n    } catch (err) {\n      console.error(\"Error rendering PDF as images:\", err);\n      setError(\"Failed to render PDF.\");\n    }\n  };\n\n  // Handle downloading the modified PDF\n  const handleDownload = async () => {\n    if (!user) return toast.error(\"Debe iniciar sesión\");\n\n    try {\n      const pdfBytes = await fetchPdf(pdfUrl); // Replace with your actual PDF URL\n      const modifiedPdfBytes = await fillPdfFields(pdfBytes);\n      const blob = new Blob([modifiedPdfBytes], { type: \"application/pdf\" });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"modified-pdf.pdf\";\n      link.click();\n    } catch (err) {\n      console.error(\"Error downloading PDF:\", err);\n    }\n  };\n\n  // Only start fetching the PDF once the API data is available\n  useEffect(() => {\n    const initializePdf = async () => {\n      if (dataFromApi) {  // Check if data is available before processing PDF\n        try {\n          setLoading(true);\n          const response = await fetch(pdfUrl); // Replace with your actual PDF URL\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n          const pdfBytes = await response.arrayBuffer();\n          const modifiedPdfBytes = await fillPdfFields(pdfBytes);\n          await renderPdfAsImages(modifiedPdfBytes);\n        } catch (err) {\n          console.error(\"Initialization error:\", err);\n          setError(\"No se pudo inicializar el PDF.\");\n        } finally {\n          setLoading(false);\n        }\n      }\n    };\n\n    initializePdf();\n  }, [dataFromApi]); // Trigger this effect only when dataFromApi changes\n\n  // Button handlers for modal\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => {\n    setOpen(false);\n    window.location.reload();\n  };\n\n  return (\n    <div>\n\n      {/* Render API data (if available) */}\n      {dataFromApi && (\n        <div>\n          <Typography variant=\"h6\">Datos de la API:</Typography>\n          <pre>{JSON.stringify(dataFromApi, null, 2)}</pre>\n        </div>\n      )}\n\n      {/* Render PDF images after the API data has been loaded */}\n      {images.length > 0 && (\n        <div>\n          {images.map((src, index) => (\n            <img key={index} src={src} alt={`Page ${index + 1}`} style={{ width: \"100%\", borderRadius: \"8px\" }} />\n          ))}\n        </div>\n      )}\n\n      <ToastContainer />\n      <ExcelUploaderStorage open={open} handleClose={handleClose} />\n\n      <IconButton\n        onClick={handleOpen}\n        color=\"success\"\n        style={{\n          position: 'fixed',\n          top: '50%',\n          right: '20px',\n          backgroundColor: 'rgba(255, 255, 255, 0.5)',\n        }}\n      >\n        <TuneIcon />\n      </IconButton>\n\n      {user && (\n        <IconButton\n          onClick={handleDownload}\n          color=\"success\"\n          style={{\n            position: 'fixed',\n            top: '60%',\n            right: '20px',\n            backgroundColor: 'rgba(255, 255, 255, 0.5)',\n          }}\n        >\n          <DownloadIcon />\n        </IconButton>\n      )}\n\n      {loading && !dataFromApi && <CircularProgress style={{ position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }} />}\n      {error && <Typography color=\"error\">{error}</Typography>}\n\n\n    </div>\n  );\n};\n\nexport default PDFRenderer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Box,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Link,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as XLSX from \"xlsx\";\n\nconst ExcelUploaderStorage = ({ open, handleClose }) => {\n    const [sheets, setSheets] = useState(null); // Datos finales confirmados\n    const [tempSheets, setTempSheets] = useState(null); // Datos cargados temporalmente\n    const [dragOver, setDragOver] = useState(false);\n    const [expanded, setExpanded] = useState({}); // Estado para controlar expansión de hojas\n\n    useEffect(() => {\n        const storedData = sessionStorage.getItem(\"excelData\");\n        if (storedData) {\n            setSheets(JSON.parse(storedData));\n        }\n    }, []);\n\n    const handleFileUpload = (file) => {\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: \"array\" });\n            const sheetsData = {};\n\n            workbook.SheetNames.forEach((sheetName) => {\n                const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                    header: 1,\n                });\n\n                const filteredSheet = sheet.filter((row) =>\n                    row.some((cell) => cell !== null && cell !== undefined && cell !== \"\")\n                );\n\n                sheetsData[sheetName] = filteredSheet;\n            });\n\n            setTempSheets(sheetsData);\n        };\n\n        reader.readAsArrayBuffer(file);\n    };\n\n    const handleInputChange = (event) => {\n        const file = event.target.files[0];\n        handleFileUpload(file);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        setDragOver(true);\n    };\n\n    const handleDragLeave = () => {\n        setDragOver(false);\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        setDragOver(false);\n        const file = event.dataTransfer.files[0];\n        handleFileUpload(file);\n    };\n\n    const navigate = useNavigate();\n\n    const handleConfirm = () => {\n        if (tempSheets) {\n            setSheets(tempSheets);\n            sessionStorage.setItem(\"excelData\", JSON.stringify(tempSheets));\n        }\n        setTempSheets(null);\n        handleClose();\n        navigate(0);\n    };\n\n    const handleCancel = () => {\n        setTempSheets(null);\n        handleClose();\n    };\n\n    const toggleExpand = (sheetName) => {\n        setExpanded((prev) => ({\n            ...prev,\n            [sheetName]: !prev[sheetName],\n        }));\n    };\n\n    return (\n        <Box sx={{ p: 2 }}>\n            {/* <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\"> */}\n            <Dialog open={open} onClose={handleClose} fullWidth fullScreen>\n\n                <DialogTitle>Subir archivo Excel de parámetros</DialogTitle>\n                <DialogContent>\n                    <Box\n                        sx={{\n                            mt: 2,\n                            p: 2,\n                            border: \"2px dashed\",\n                            borderColor: dragOver ? \"primary.main\" : \"grey.400\",\n                            borderRadius: 2,\n                            textAlign: \"center\",\n                            backgroundColor: dragOver ? \"grey.100\" : \"transparent\",\n                        }}\n                        onDragOver={handleDragOver}\n                        onDragLeave={handleDragLeave}\n                        onDrop={handleDrop}\n                    >\n                        <Typography variant=\"body1\" gutterBottom>\n                            Arrastra y suelta tu archivo aquí o selecciona uno manualmente\n                        </Typography>\n                        <Button variant=\"contained\" component=\"label\">\n                            Seleccionar Archivo\n                            <input\n                                type=\"file\"\n                                hidden\n                                accept=\".xlsx, .xls\"\n                                onChange={handleInputChange}\n                            />\n                        </Button>\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"body2\">\n                            ¿Necesitas una plantilla? Descárgala haciendo clic\n                            <Link href=\"/plantillasParametros/caes.xlsx\" download sx={{ ml: 1 }}>\n                                aquí\n                            </Link>\n                            .\n                        </Typography>\n                    </Box>\n                    {tempSheets && (\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Hojas procesadas:</Typography>\n                            {Object.keys(tempSheets).map((sheetName) => (\n                                <Box key={sheetName} sx={{ mt: 1 }}>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"space-between\",\n                                        }}\n                                    >\n                                        <Typography variant=\"body1\">{sheetName}</Typography>\n                                        <IconButton onClick={() => toggleExpand(sheetName)}>\n                                            {expanded[sheetName] ? (\n                                                <ExpandLessIcon />\n                                            ) : (\n                                                <ExpandMoreIcon />\n                                            )}\n                                        </IconButton>\n                                    </Box>\n                                    <Collapse in={expanded[sheetName]} timeout=\"auto\" unmountOnExit>\n                                        <TableContainer component={Paper} sx={{ mt: 1 }}>\n                                            <Table size=\"small\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        {tempSheets[sheetName][0]?.map((cell, index) => (\n                                                            <TableCell key={index}>{cell}</TableCell>\n                                                        ))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {tempSheets[sheetName].slice(1).map((row, rowIndex) => (\n                                                        <TableRow key={rowIndex}>\n                                                            {row.map((cell, cellIndex) => (\n                                                                <TableCell key={cellIndex}>{cell}</TableCell>\n                                                            ))}\n                                                        </TableRow>\n                                                    ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Collapse>\n                                </Box>\n                            ))}\n                        </Box>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} color=\"secondary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\">\n                        Confirmar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default ExcelUploaderStorage;\n\n\n\n","const config = {\n    // API_URL: \"http://0.0.0.0:8000\",\n    API_URL: \"https://caeserver.duckdns.org\",\n};\nexport default config;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["pdfjsLib","workerSrc","PDF_API_URL","concat","config","API_URL","Date","getTime","PDFRenderer","user","useAuthState","auth","images","setImages","useNavigate","useState","loading","setLoading","error","setError","formData","setFormData","dataFromApi","setDataFromApi","useEffect","async","sessionData","sessionStorage","getItem","dataToSend","JSON","parse","example","response","axios","post","data","message","fetchData","fillPdfFields","pdfDoc","PDFDocument","load","pdfBytes","form","getForm","forEach","_ref","fieldName","value","field","getField","setText","String","err","console","warn","save","Error","fetch","pdfUrl","ok","status","arrayBuffer","modifiedPdfBytes","pdf","promise","pages","i","numPages","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","width","height","render","canvasContext","push","toDataURL","renderPdfAsImages","initializePdf","open","setOpen","_jsxs","children","_jsx","Typography","variant","stringify","length","map","src","index","alt","style","borderRadius","ToastContainer","ExcelUploaderStorage","handleClose","window","location","reload","IconButton","onClick","handleOpen","color","position","top","right","backgroundColor","TuneIcon","toast","then","res","fetchPdf","blob","Blob","type","link","href","URL","createObjectURL","download","click","DownloadIcon","CircularProgress","left","transform","sheets","setSheets","tempSheets","setTempSheets","dragOver","setDragOver","expanded","setExpanded","storedData","handleFileUpload","file","reader","FileReader","onload","e","Uint8Array","target","result","workbook","XLSX","sheetsData","SheetNames","sheetName","filteredSheet","sheet_to_json","Sheets","header","filter","row","some","cell","undefined","readAsArrayBuffer","navigate","Box","sx","p","Dialog","onClose","fullWidth","fullScreen","DialogTitle","DialogContent","mt","border","borderColor","textAlign","onDragOver","event","preventDefault","onDragLeave","handleDragLeave","onDrop","dataTransfer","files","gutterBottom","Button","component","hidden","accept","onChange","Link","ml","Object","keys","_tempSheets$sheetName","display","alignItems","justifyContent","prev","_objectSpread","toggleExpand","ExpandLessIcon","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","slice","rowIndex","cellIndex","DialogActions","handleCancel","handleConfirm","setItem","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_templateObject","_templateObject2","_templateObject3","_templateObject4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","rotateAnimation","css","dashAnimation","CircularProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","memoTheme","theme","variants","transition","transitions","create","animation","entries","palette","createSimplePaletteValueFilter","_ref2","vars","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useDefaultProps","className","thickness","other","_objectWithoutProperties","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","clsx","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}