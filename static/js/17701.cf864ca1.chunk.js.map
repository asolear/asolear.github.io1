{"version":3,"file":"static/js/17701.cf864ca1.chunk.js","mappings":"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","sources":["Informes/formulario/C2pdfRellenoValoresdeSessionStorage.jsx","Informes/formulario/zExcelUploaderStoragePrecargaxDefecto.jsx","components/configURL.jsx","../node_modules/@mui/material/CircularProgress/circularProgressClasses.js","../node_modules/@mui/material/CircularProgress/CircularProgress.js"],"sourcesContent":["import pdfUrl from './AGR010  Pantallas térmicas en invernaderos.pdf';\n\nimport React, { useEffect, useState } from \"react\";\nimport * as pdfjsLib from \"pdfjs-dist\";\nimport { PDFDocument } from \"pdf-lib\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../../components/firebase/firebaseConfig\";\nimport {\n  IconButton,\n  Typography,\n  List,\n  ListItem,\n  ListItemText,\n  Link,\n  CircularProgress\n} from \"@mui/material\";\nimport { toast, ToastContainer } from \"react-toastify\";\n\nimport {\n  Tune as TuneIcon,\n  Download as DownloadIcon\n} from \"@mui/icons-material\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport ExcelUploaderStorage from \"./zExcelUploaderStoragePrecargaxDefecto\";\n\n\n\nimport config from '../../components/configURL';\n// Configuración de pdf.worker\npdfjsLib.GlobalWorkerOptions.workerSrc = `/workers/3.11.174/pdf.worker.min.js`;\nconst ENDPOINT = \"numero\"\nconst PDF_API_URL = `${config.API_URL}/${ENDPOINT}?timestamp=${new Date().getTime()}`;\n\n\n\nconst PDFRenderer = () => {\n  const [user] = useAuthState(auth);\n  const navigate = useNavigate();\n  const [images, setImages] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [formData, setFormData] = useState({});\n\n  const calculados = (data) => ({\n    \"S\": \"44\",\n    \"Ki\": \"44\",\n    \"Kp\": \"22\",\n  });\n\n  const fetchPdf = async (pdfUrl) => {\n    try {\n      return await fetch(pdfUrl).then((res) => res.arrayBuffer());\n    } catch (err) {\n      console.error(\"Error fetching PDF:\", err);\n      throw new Error(\"Failed to fetch PDF.\");\n    }\n  };\n\n  const fillPdfFields = async (pdfBytes) => {\n    try {\n      const pdfDoc = await PDFDocument.load(pdfBytes);\n      const form = pdfDoc.getForm();\n      const updatedData = calculados(formData);\n\n      Object.entries(updatedData).forEach(([name, value]) => {\n        try {\n          const field = form.getField(name);\n          field.setText(String(value));\n        } catch (err) {\n          console.warn(`Field '${name}' not found in PDF:`, err.message);\n        }\n      });\n\n      return await pdfDoc.save();\n    } catch (err) {\n      console.error(\"Error filling PDF fields:\", err);\n      throw new Error(\"Failed to fill PDF fields.\");\n    }\n  };\n\n  const renderPdfAsImages = async (pdfBytes) => {\n    try {\n      const pdf = await pdfjsLib.getDocument({ data: pdfBytes }).promise;\n      const pages = [];\n\n      for (let i = 1; i <= pdf.numPages; i++) {\n        const page = await pdf.getPage(i);\n        const viewport = page.getViewport({ scale: 2.5 });\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        canvas.width = viewport.width;\n        canvas.height = viewport.height;\n        await page.render({ canvasContext: context, viewport }).promise;\n        pages.push(canvas.toDataURL(\"image/png\"));\n      }\n\n      setImages(pages);\n    } catch (err) {\n      console.error(\"Error rendering PDF as images:\", err);\n      setError(\"Failed to render PDF.\");\n    }\n  };\n\n\n  const handleDownload = async () => {\n    if (!user) return toast.error(\"Debe iniciar sesión\");\n\n    try {\n      const pdfBytes = await fetchPdf(pdfUrl);\n      const modifiedPdfBytes = await fillPdfFields(pdfBytes);\n      const blob = new Blob([modifiedPdfBytes], { type: \"application/pdf\" });\n      const link = document.createElement(\"a\");\n      link.href = URL.createObjectURL(blob);\n      link.download = \"modified-pdf.pdf\";\n      link.click();\n    } catch (err) {\n      console.error(\"Error downloading PDF:\", err);\n    }\n  };\n\n    const [open, setOpen] = useState(false);\n    const [file, setFile] = useState(null);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => {\n        setOpen(false);\n        setFile(null);\n        setError(null);\n        window.location.reload();\n    };\n\n  useEffect(() => {\n    const initializePdf = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(pdfUrl);\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        const pdfBytes = await response.arrayBuffer();\n        const modifiedPdfBytes = await fillPdfFields(pdfBytes);\n        await renderPdfAsImages(modifiedPdfBytes);\n      } catch (err) {\n        console.error(\"Initialization error:\", err);\n        setError(\"No se pudo inicializar el PDF.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    initializePdf();\n  }, []);\n\n  \n  return (\n    <div>\n      <IconButton\n        // onClick={() => toast.info(\"Configuración en desarrollo\")}\n        onClick={handleOpen}\n\n        color=\"success\"\n        style={{\n          position: 'fixed', // Fija el botón en la pantalla\n          top: '50%', // Distancia desde el borde inferior\n          right: '20px', // Distancia desde el borde derecho\n          backgroundColor: 'white', // Color de fondo para mayor visibilidad\n          boxShadow: '0px 4px 6px rgba(0,0,0,0.1)', // Sombra para destacar el botón\n          backgroundColor: \"rgba(255, 255, 255, 0.5)\", // Blanco translúcido\n\n        }}      >\n        <TuneIcon />\n      </IconButton>\n\n      {user && (\n        <IconButton\n          onClick={handleDownload}\n          color=\"success\"\n          style={{\n            position: 'fixed', // Fija el botón en la pantalla\n            top: '60%', // Distancia desde el borde inferior\n            right: '20px', // Distancia desde el borde derecho\n            backgroundColor: 'white', // Color de fondo para mayor visibilidad\n            boxShadow: '0px 4px 6px rgba(0,0,0,0.1)', // Sombra para destacar el botón\n            backgroundColor: \"rgba(255, 255, 255, 0.5)\", // Blanco translúcido\n\n          }}        >\n          <DownloadIcon />\n        </IconButton>\n      )}\n\n      {loading && <CircularProgress style={loadingStyle} />}\n      {error && <Typography color=\"error\">{error}</Typography>}\n\n      <div>\n        {images.map((src, index) => (\n          <img\n            key={index}\n            src={src}\n            alt={`Page ${index + 1}`}\n            style={imageStyle}\n          />\n        ))}\n      </div>\n      <ToastContainer />\n      <ExcelUploaderStorage open={open} handleClose={handleClose} />\n\n    </div>\n  );\n};\n\n\n\nconst loadingStyle = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n};\n\nconst imageStyle = {\n  width: \"100%\",\n  borderRadius: \"8px\",\n};\n\nexport default PDFRenderer;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    Button,\n    Box,\n    Typography,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogActions,\n    Link,\n    Collapse,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    IconButton,\n} from \"@mui/material\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport ExpandLessIcon from \"@mui/icons-material/ExpandLess\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as XLSX from \"xlsx\";\n\nconst ExcelUploaderStorage = ({ open, handleClose }) => {\n    const [sheets, setSheets] = useState(null); // Datos finales confirmados\n    const [tempSheets, setTempSheets] = useState(null); // Datos cargados temporalmente\n    const [dragOver, setDragOver] = useState(false);\n    const [expanded, setExpanded] = useState({}); // Estado para controlar expansión de hojas\n\n    useEffect(() => {\n        const storedData = sessionStorage.getItem(\"excelData\");\n        if (storedData) {\n            setSheets(JSON.parse(storedData));\n        }\n    }, []);\n\n    const handleFileUpload = (file) => {\n        if (!file) return;\n\n        const reader = new FileReader();\n        reader.onload = (e) => {\n            const data = new Uint8Array(e.target.result);\n            const workbook = XLSX.read(data, { type: \"array\" });\n            const sheetsData = {};\n\n            workbook.SheetNames.forEach((sheetName) => {\n                const sheet = XLSX.utils.sheet_to_json(workbook.Sheets[sheetName], {\n                    header: 1,\n                });\n\n                const filteredSheet = sheet.filter((row) =>\n                    row.some((cell) => cell !== null && cell !== undefined && cell !== \"\")\n                );\n\n                sheetsData[sheetName] = filteredSheet;\n            });\n\n            setTempSheets(sheetsData);\n        };\n\n        reader.readAsArrayBuffer(file);\n    };\n\n    const handleInputChange = (event) => {\n        const file = event.target.files[0];\n        handleFileUpload(file);\n    };\n\n    const handleDragOver = (event) => {\n        event.preventDefault();\n        setDragOver(true);\n    };\n\n    const handleDragLeave = () => {\n        setDragOver(false);\n    };\n\n    const handleDrop = (event) => {\n        event.preventDefault();\n        setDragOver(false);\n        const file = event.dataTransfer.files[0];\n        handleFileUpload(file);\n    };\n\n    const navigate = useNavigate();\n\n    const handleConfirm = () => {\n        if (tempSheets) {\n            setSheets(tempSheets);\n            sessionStorage.setItem(\"excelData\", JSON.stringify(tempSheets));\n        }\n        setTempSheets(null);\n        handleClose();\n        navigate(0);\n    };\n\n    const handleCancel = () => {\n        setTempSheets(null);\n        handleClose();\n    };\n\n    const toggleExpand = (sheetName) => {\n        setExpanded((prev) => ({\n            ...prev,\n            [sheetName]: !prev[sheetName],\n        }));\n    };\n\n    return (\n        <Box sx={{ p: 2 }}>\n            {/* <Dialog open={open} onClose={handleClose} fullWidth maxWidth=\"sm\"> */}\n            <Dialog open={open} onClose={handleClose} fullWidth fullScreen>\n\n                <DialogTitle>Subir archivo Excel de parámetros</DialogTitle>\n                <DialogContent>\n                    <Box\n                        sx={{\n                            mt: 2,\n                            p: 2,\n                            border: \"2px dashed\",\n                            borderColor: dragOver ? \"primary.main\" : \"grey.400\",\n                            borderRadius: 2,\n                            textAlign: \"center\",\n                            backgroundColor: dragOver ? \"grey.100\" : \"transparent\",\n                        }}\n                        onDragOver={handleDragOver}\n                        onDragLeave={handleDragLeave}\n                        onDrop={handleDrop}\n                    >\n                        <Typography variant=\"body1\" gutterBottom>\n                            Arrastra y suelta tu archivo aquí o selecciona uno manualmente\n                        </Typography>\n                        <Button variant=\"contained\" component=\"label\">\n                            Seleccionar Archivo\n                            <input\n                                type=\"file\"\n                                hidden\n                                accept=\".xlsx, .xls\"\n                                onChange={handleInputChange}\n                            />\n                        </Button>\n                    </Box>\n                    <Box sx={{ mt: 2 }}>\n                        <Typography variant=\"body2\">\n                            ¿Necesitas una plantilla? Descárgala haciendo clic\n                            <Link href=\"/plantillasParametros/caes.xlsx\" download sx={{ ml: 1 }}>\n                                aquí\n                            </Link>\n                            .\n                        </Typography>\n                    </Box>\n                    {tempSheets && (\n                        <Box sx={{ mt: 2 }}>\n                            <Typography variant=\"subtitle1\">Hojas procesadas:</Typography>\n                            {Object.keys(tempSheets).map((sheetName) => (\n                                <Box key={sheetName} sx={{ mt: 1 }}>\n                                    <Box\n                                        sx={{\n                                            display: \"flex\",\n                                            alignItems: \"center\",\n                                            justifyContent: \"space-between\",\n                                        }}\n                                    >\n                                        <Typography variant=\"body1\">{sheetName}</Typography>\n                                        <IconButton onClick={() => toggleExpand(sheetName)}>\n                                            {expanded[sheetName] ? (\n                                                <ExpandLessIcon />\n                                            ) : (\n                                                <ExpandMoreIcon />\n                                            )}\n                                        </IconButton>\n                                    </Box>\n                                    <Collapse in={expanded[sheetName]} timeout=\"auto\" unmountOnExit>\n                                        <TableContainer component={Paper} sx={{ mt: 1 }}>\n                                            <Table size=\"small\">\n                                                <TableHead>\n                                                    <TableRow>\n                                                        {tempSheets[sheetName][0]?.map((cell, index) => (\n                                                            <TableCell key={index}>{cell}</TableCell>\n                                                        ))}\n                                                    </TableRow>\n                                                </TableHead>\n                                                <TableBody>\n                                                    {tempSheets[sheetName].slice(1).map((row, rowIndex) => (\n                                                        <TableRow key={rowIndex}>\n                                                            {row.map((cell, cellIndex) => (\n                                                                <TableCell key={cellIndex}>{cell}</TableCell>\n                                                            ))}\n                                                        </TableRow>\n                                                    ))}\n                                                </TableBody>\n                                            </Table>\n                                        </TableContainer>\n                                    </Collapse>\n                                </Box>\n                            ))}\n                        </Box>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel} color=\"secondary\">\n                        Cancelar\n                    </Button>\n                    <Button onClick={handleConfirm} color=\"primary\">\n                        Confirmar\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </Box>\n    );\n};\n\nexport default ExcelUploaderStorage;\n\n\n\n","const config = {\n    // API_URL: \"http://0.0.0.0:8000\",\n    API_URL: \"https://caeserver.duckdns.org\",\n};\nexport default config;\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCircularProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiCircularProgress', slot);\n}\nconst circularProgressClasses = generateUtilityClasses('MuiCircularProgress', ['root', 'determinate', 'indeterminate', 'colorPrimary', 'colorSecondary', 'svg', 'circle', 'circleDeterminate', 'circleIndeterminate', 'circleDisableShrink']);\nexport default circularProgressClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css, styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport createSimplePaletteValueFilter from \"../utils/createSimplePaletteValueFilter.js\";\nimport { getCircularProgressUtilityClass } from \"./circularProgressClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst SIZE = 44;\nconst circularRotateKeyframe = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\nconst circularDashKeyframe = keyframes`\n  0% {\n    stroke-dasharray: 1px, 200px;\n    stroke-dashoffset: 0;\n  }\n\n  50% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -15px;\n  }\n\n  100% {\n    stroke-dasharray: 100px, 200px;\n    stroke-dashoffset: -125px;\n  }\n`;\n\n// This implementation is for supporting both Styled-components v4+ and Pigment CSS.\n// A global animation has to be created here for Styled-components v4+ (https://github.com/styled-components/styled-components/blob/main/packages/styled-components/src/utils/errors.md#12).\n// which can be done by checking typeof indeterminate1Keyframe !== 'string' (at runtime, Pigment CSS transform keyframes`` to a string).\nconst rotateAnimation = typeof circularRotateKeyframe !== 'string' ? css`\n        animation: ${circularRotateKeyframe} 1.4s linear infinite;\n      ` : null;\nconst dashAnimation = typeof circularDashKeyframe !== 'string' ? css`\n        animation: ${circularDashKeyframe} 1.4s ease-in-out infinite;\n      ` : null;\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color,\n    disableShrink\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, `color${capitalize(color)}`],\n    svg: ['svg'],\n    circle: ['circle', `circle${capitalize(variant)}`, disableShrink && 'circleDisableShrink']\n  };\n  return composeClasses(slots, getCircularProgressUtilityClass, classes);\n};\nconst CircularProgressRoot = styled('span', {\n  name: 'MuiCircularProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'inline-block',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('transform')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: rotateAnimation || {\n      animation: `${circularRotateKeyframe} 1.4s linear infinite`\n    }\n  }, ...Object.entries(theme.palette).filter(createSimplePaletteValueFilter()).map(([color]) => ({\n    props: {\n      color\n    },\n    style: {\n      color: (theme.vars || theme).palette[color].main\n    }\n  }))]\n})));\nconst CircularProgressSVG = styled('svg', {\n  name: 'MuiCircularProgress',\n  slot: 'Svg',\n  overridesResolver: (props, styles) => styles.svg\n})({\n  display: 'block' // Keeps the progress centered\n});\nconst CircularProgressCircle = styled('circle', {\n  name: 'MuiCircularProgress',\n  slot: 'Circle',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.circle, styles[`circle${capitalize(ownerState.variant)}`], ownerState.disableShrink && styles.circleDisableShrink];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  stroke: 'currentColor',\n  variants: [{\n    props: {\n      variant: 'determinate'\n    },\n    style: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    }\n  }, {\n    props: {\n      variant: 'indeterminate'\n    },\n    style: {\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: 0 // Add the unit to fix a Edge 16 and below bug.\n    }\n  }, {\n    props: ({\n      ownerState\n    }) => ownerState.variant === 'indeterminate' && !ownerState.disableShrink,\n    style: dashAnimation || {\n      // At runtime for Pigment CSS, `bufferAnimation` will be null and the generated keyframe will be used.\n      animation: `${circularDashKeyframe} 1.4s ease-in-out infinite`\n    }\n  }]\n})));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCircularProgress'\n  });\n  const {\n    className,\n    color = 'primary',\n    disableShrink = false,\n    size = 40,\n    style,\n    thickness = 3.6,\n    value = 0,\n    variant = 'indeterminate',\n    ...other\n  } = props;\n  const ownerState = {\n    ...props,\n    color,\n    disableShrink,\n    size,\n    thickness,\n    value,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const circleStyle = {};\n  const rootStyle = {};\n  const rootProps = {};\n  if (variant === 'determinate') {\n    const circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n    circleStyle.strokeDashoffset = `${((100 - value) / 100 * circumference).toFixed(3)}px`;\n    rootStyle.transform = 'rotate(-90deg)';\n  }\n  return /*#__PURE__*/_jsx(CircularProgressRoot, {\n    className: clsx(classes.root, className),\n    style: {\n      width: size,\n      height: size,\n      ...rootStyle,\n      ...style\n    },\n    ownerState: ownerState,\n    ref: ref,\n    role: \"progressbar\",\n    ...rootProps,\n    ...other,\n    children: /*#__PURE__*/_jsx(CircularProgressSVG, {\n      className: classes.svg,\n      ownerState: ownerState,\n      viewBox: `${SIZE / 2} ${SIZE / 2} ${SIZE} ${SIZE}`,\n      children: /*#__PURE__*/_jsx(CircularProgressCircle, {\n        className: classes.circle,\n        style: circleStyle,\n        ownerState: ownerState,\n        cx: SIZE,\n        cy: SIZE,\n        r: (SIZE - thickness) / 2,\n        fill: \"none\",\n        strokeWidth: thickness\n      })\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   * @default false\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, props => {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('MUI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The size of the component.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, for example '3rem'.\n   * @default 40\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The thickness of the circle.\n   * @default 3.6\n   */\n  thickness: PropTypes.number,\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate'])\n} : void 0;\nexport default CircularProgress;"],"names":["pdfjsLib","workerSrc","concat","config","API_URL","Date","getTime","loadingStyle","position","top","left","transform","imageStyle","width","borderRadius","PDFRenderer","user","useAuthState","auth","images","setImages","useNavigate","useState","loading","setLoading","error","setError","formData","setFormData","fillPdfFields","async","pdfDoc","PDFDocument","load","pdfBytes","form","getForm","updatedData","Object","entries","forEach","_ref","name","value","getField","setText","String","err","console","warn","message","save","Error","open","setOpen","file","setFile","useEffect","response","fetch","pdfUrl","ok","status","arrayBuffer","modifiedPdfBytes","pdf","data","promise","pages","i","numPages","page","getPage","viewport","getViewport","scale","canvas","document","createElement","context","getContext","height","render","canvasContext","push","toDataURL","renderPdfAsImages","initializePdf","_jsxs","children","_jsx","IconButton","onClick","handleOpen","color","style","right","backgroundColor","boxShadow","TuneIcon","toast","then","res","fetchPdf","blob","Blob","type","link","href","URL","createObjectURL","download","click","DownloadIcon","CircularProgress","Typography","map","src","index","alt","ToastContainer","ExcelUploaderStorage","handleClose","window","location","reload","sheets","setSheets","tempSheets","setTempSheets","dragOver","setDragOver","expanded","setExpanded","storedData","sessionStorage","getItem","JSON","parse","handleFileUpload","reader","FileReader","onload","e","Uint8Array","target","result","workbook","XLSX","sheetsData","SheetNames","sheetName","filteredSheet","sheet_to_json","Sheets","header","filter","row","some","cell","undefined","readAsArrayBuffer","navigate","Box","sx","p","Dialog","onClose","fullWidth","fullScreen","DialogTitle","DialogContent","mt","border","borderColor","textAlign","onDragOver","event","preventDefault","onDragLeave","handleDragLeave","onDrop","dataTransfer","files","variant","gutterBottom","Button","component","hidden","accept","onChange","Link","ml","keys","_tempSheets$sheetName","display","alignItems","justifyContent","prev","_objectSpread","toggleExpand","ExpandLessIcon","ExpandMoreIcon","Collapse","in","timeout","unmountOnExit","TableContainer","Paper","Table","size","TableHead","TableRow","TableCell","TableBody","slice","rowIndex","cellIndex","DialogActions","handleCancel","handleConfirm","setItem","stringify","getCircularProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_templateObject","_templateObject2","_templateObject3","_templateObject4","SIZE","circularRotateKeyframe","keyframes","_taggedTemplateLiteral","circularDashKeyframe","rotateAnimation","css","dashAnimation","CircularProgressRoot","styled","overridesResolver","props","styles","ownerState","root","capitalize","memoTheme","theme","variants","transition","transitions","create","animation","palette","createSimplePaletteValueFilter","_ref2","vars","main","CircularProgressSVG","svg","CircularProgressCircle","circle","disableShrink","circleDisableShrink","_ref3","stroke","strokeDasharray","strokeDashoffset","_ref4","React","inProps","ref","useDefaultProps","className","thickness","other","_objectWithoutProperties","classes","slots","composeClasses","useUtilityClasses","circleStyle","rootStyle","rootProps","circumference","Math","PI","toFixed","round","clsx","role","viewBox","cx","cy","r","fill","strokeWidth"],"sourceRoot":""}